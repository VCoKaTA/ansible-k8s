- name: 读取kubectl证书stat信息
  stat: path="{{ pki_dir }}/kubectl.kubeconfig"
  register: kubectl_file

- name: 生成kubeconfig
  shell: |
      {{ pki_bin_dir }}/kubectl config set-cluster {{ CLUSTER_NAME }} \
      --certificate-authority={{ pki_dir }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ VIP }}:{{ VIP_APISERVER_PORT }} \
      --kubeconfig={{ pki_dir }}/{{ item.KUBE_CONFIG }} && \
      {{ pki_bin_dir }}/kubectl config set-credentials {{ item.KUBE_USER }} \
      --client-certificate={{ pki_dir }}/{{ item.KUBE_CERT }}.pem \
      --client-key={{ pki_dir }}/{{ item.KUBE_CERT }}-key.pem \
      --embed-certs=true \
      --kubeconfig={{ pki_dir }}/{{ item.KUBE_CONFIG }} && \
      {{ pki_bin_dir }}/kubectl config set-context {{ item.KUBE_USER }} \
      --cluster={{ CLUSTER_NAME }} \
      --user={{ item.KUBE_USER }} \
      --kubeconfig={{ pki_dir }}/{{ item.KUBE_CONFIG }} && \
      {{ pki_bin_dir }}/kubectl config use-context {{ item.KUBE_USER }} --kubeconfig={{ pki_dir }}/{{ item.KUBE_CONFIG }}
  with_items:
    - { KUBE_USER: 'system:kube-controller-manager', KUBE_CERT: "kube-controller-manager", KUBE_CONFIG: 'kube-controller-manager.kubeconfig' }
    - { KUBE_USER: 'system:kube-scheduler', KUBE_CERT: "kube-scheduler", KUBE_CONFIG: 'kube-scheduler.kubeconfig'}
    - { KUBE_USER: 'admin', KUBE_CERT: "admin", KUBE_CONFIG: 'kubectl.kubeconfig'}
  when: kubectl_file.stat.isreg is not defined

#----------- 创建kube-proxy kubeconfig文件
- name: 读取kube-proxy证书stat信息
  stat: path="{{ pki_dir }}/kube-proxy.kubeconfig"
  register: kube_proxy_file

- name: 设置集群参数kube-proxy
  shell: |
        {{ pki_bin_dir }}/kubectl config set-cluster {{ CLUSTER_NAME }} \
        --certificate-authority={{ pki_dir }}/ca.pem \
        --embed-certs=true \
        --server=https://{{ VIP }}:{{ VIP_APISERVER_PORT }} \
        --kubeconfig={{ pki_dir }}/kube-proxy.kubeconfig  && \
        {{ pki_bin_dir }}/kubectl config set-credentials kube-proxy \
        --client-certificate={{  pki_dir  }}/kube-proxy.pem \
        --embed-certs=true \
        --client-key={{ pki_dir }}/kube-proxy-key.pem \
        --kubeconfig={{ pki_dir }}/kube-proxy.kubeconfig && \
        {{ pki_bin_dir }}/kubectl config set-context default \
        --cluster={{ CLUSTER_NAME }} --user=kube-proxy \
        --kubeconfig={{ pki_dir }}/kube-proxy.kubeconfig && \
        {{ pki_bin_dir }}/kubectl config use-context default  --kubeconfig={{ pki_dir }}/kube-proxy.kubeconfig
  args:
    executable: bash
  when: kube_proxy_file.stat.isreg is not defined
