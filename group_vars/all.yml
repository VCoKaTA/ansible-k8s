## 本地包下载地址
cfssl_url: 'http://10.100.48.82/downloads/cfssl-1.2/cfssl'
cfssljson_url: 'http://10.100.48.82/downloads/cfssl-1.2/cfssljson'
cfssl_certinfo_url: 'http://10.100.48.82/downloads/cfssl-1.2/cfssl-certinfo'
etcd_url: 'http://10.100.48.82/downloads/etcd-v3.4.0'

#kube_bin: 'http://10.100.48.82/downloads/k8s-v1.7/bin'
kube_bin: 'http://10.100.48.82/downloads/k8s-v1.6/bin'
calico_bin: "http://10.100.48.82/downloads/calicoctl-v3.1.3"
kube_apiserver_url: 'http://10.100.48.82/downloads/k8s-v1.7/bin/kube-apiserver'
kube_controller_manager_url: 'http://10.100.48.82/downloads/k8s-v1.7/bin/kube-controller-manager'
kube_scheduler_url: 'http://10.100.48.82/downloads/k8s-v1.7/bin/kube-scheduler'
kube_proxy_url: 'http://10.100.48.82/downloads/k8s-v1.7/bin/kube-proxy'
kubectl_url: 'http://10.100.48.82/downloads/k8s-v1.7/bin/kubectl'
kubelet_url: 'http://10.100.48.82/downloads/k8s-v1.7/bin/kubelet'

image:
  calico: v3.9.5

###时间同步
ntp_servers: 
  - 'cn.pool.ntp.org'
  - 's1b.time.edu.cn'
chrony_server: 
  - '10.100.48.7'

##kernel内核相关
kernel_rpm_key: 'https://www.elrepo.org/RPM-GPG-KEY-elrepo.org'
kernel_elrepo: ' https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm'
kernel_v5: 'ml'
kernel_v4: 'lt'
##当前安装内核版本
kernel_v: 'lt'

##yum源
CentOS7_Base: 'http://mirrors.aliyun.com/repo/Centos-7.repo'
EPEL7 : 'http://mirrors.aliyun.com/repo/epel-7.repo'
Docker_Ce: "http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo"

##时区
TimeZone: 'Asia/Shanghai'

##默认挂在点
data_dir: '/data'
docker_dir: '/var/lib/docker'

##高可用参数
# haproxy负载均衡算法，常见如下：
# "roundrobin": 基于服务器权重的轮询
# "leastconn": 基于服务器最小连接数
# "source": 基于请求源IP地址
# "uri": 基于请求的URI
BALANCE_ALG: 'roundrobin'

# 区分多个instance的VRRP组播，同网段不能重复，取值在0-255之间
# 因项目已设置vrrp报文单播模式，所以这个ROUTER_ID 即便同网段里面有重复也没关系
ROUTER_ID: 222

##集群服务端口
ETCD_PORT: 2379
APISERVER_PORT: 6443
VIP_APISERVER_PORT: 6443

##本地tls pki相关目录
pki_dir: '/data/tmp/kubernetes/pki'
pki_bin_dir: '/data/tm/kube/bin'
#######

# Cluster container-runtime supported: docker, containerd
CONTAINER_RUNTIME: "docker"

# CA 证书相关参数
CA_EXPIRY: "876000h"
CERT_EXPIRY: "438000h"

##集群证书目录
TLS_DIR: '/etc/kubernetes/pki'

##ETCD 
ETCD_PORT: 2379
ETCD_DIR: '/data/etcd'

##集群VIP信息
VIP: '10.100.21.225'
VIP_NETMASK: 24
INTERFACE_NAME: 'eth0'

####
HARBOR:
  url: registry.test
  crt: test.crt
  ip: 10.100.23.7
  k8s: 'cm-k8s'
  user: admin
  pass: sssss 

docker:
  version: '19.03.5'
  dataDir: /var/lib/docker
#  driver: overlay2
  execOpts:
    - 'native.cgroupdriver=systemd'
  registryMirrors:
    - https://registry.test:443 

##Network plugins supported: calico, flannel, kube-router, cilium, kube-ovn
CLUSTER_NETWORK: "calico"
CLUSTER_NAME: "kubernetes"
# Service proxy mode of kube-proxy: 'iptables' or 'ipvs'
PROXY_MODE: "ipvs"

# k8s 集群 master 节点证书配置，可以添加多个ip和域名（预留扩展etcd或者masterip，或增加公网ip和域名）
MASTER_CERT_HOSTS:
  - "10.10.10.1"
  - "k8s.test.com"

# K8S Service CIDR, not overlap with node(host) networking
SERVICE_CIDR: "10.68.0.0/16"
##k8s service ip (这里选用 SERVICE_CIDR 中第1个IP)
#CLUSTER_KUBERNETES_SVC_IP: "{{ SERVICE_CIDR | ipaddr('net') | ipaddr(1) | ipaddr('address') }}"
CLUSTER_KUBERNETES_SVC_IP: "10.68.0.1"
##k8s dns service ip (这里选用 SERVICE_CIDR 中第2个IP)
#CLUSTER_DNS_SVC_IP: "{{ SERVICE_CIDR | ipaddr('net') | ipaddr(2) | ipaddr('address') }}"
CLUSTER_DNS_SVC_IP: "10.68.0.2"

# Cluster CIDR (Pod CIDR), not overlap with node(host) networking
CLUSTER_CIDR: "172.20.0.0/16"

# NodePort Range
NODE_PORT_RANGE: "20000-40000"

# Cluster DNS Domain
CLUSTER_DNS_DOMAIN: "cluster.local."

# $vars.logrotate.log为true则日志不走journald而是落地切logrotate控制容量副本
apiserver:
  logrotate:
    log: true
    confTemplate: logrotate/kube-apiserver
    logDir: /data/logs/kubernetes/kube-apiserver
    logSize: 200M
    logRotate: 7
controllerManager:
  logrotate:
    log: true
    confTemplate: logrotate/kube-controller-manager
    logDir: /data/logs/kubernetes/kube-controller-manager
    logSize: 200M
    logRotate: 7
scheduler:
  logrotate:
    log: true
    confTemplate: logrotate/kube-scheduler
    logDir: /data/logs/kubernetes/kube-scheduler
    logSize: 200M
    logRotate: 7
proxy:
  logLevel: 2
  logrotate:
    log: true
    confTemplate: logrotate/kube-proxy
    logDir: /data/logs/kubernetes/kube-proxy
    logSize: 200M
    logRotate: 7
kubelet:
  logrotate:
    log: true
    confTemplate: logrotate/kubelet
    logDir: /data/logs/kubernetes/kubelet
    logSize: 200M
    logRotate: 7
